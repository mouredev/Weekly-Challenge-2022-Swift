import Foundation

/*
 * Reto #4
 * 츼REA DE UN POL칈GONO
 * Fecha publicaci칩n enunciado: 24/01/22
 * Fecha publicaci칩n resoluci칩n: 31/01/22
 * Dificultad: F츼CIL
 *
 * Enunciado: Crea UNA 칔NICA FUNCI칍N (importante que s칩lo sea una) que sea capaz de calcular y retornar el 치rea de un pol칤gono.
 * - La funci칩n recibir치 por par치metro s칩lo UN pol칤gono a la vez.
 * - Los pol칤gonos soportados ser치n Tri치ngulo, Cuadrado y Rect치ngulo.
 * - Imprime el c치lculo del 치rea de un pol칤gono de cada tipo.
 *
 * Informaci칩n adicional:
 * - Usa el canal de nuestro discord (https://mouredev.com/discord) "游대reto-semanal" para preguntas, dudas o prestar ayuda la acomunidad.
 * - Puedes hacer un Fork del repo y una Pull Request al repo original para que veamos tu soluci칩n aportada.
 * - Revisar칠 el ejercicio en directo desde Twitch el lunes siguiente al de su publicaci칩n.
 * - Subir칠 una posible soluci칩n al ejercicio el lunes siguiente al de su publicaci칩n.
 *
 */

struct Polygon {
    private var hasFourVertices: Bool
    private var sideA: Double
    private var sideB: Double
    private var sideC: Double
    
    init(hasFourVertices:Bool, sideA: Double, sideB: Double = 0.0, sideC: Double = 0.0) {
        self.hasFourVertices = hasFourVertices
        self.sideA = sideA
        self.sideB = (sideB == 0.0) ? sideA : sideB
        self.sideC = (sideC == 0.0) ? self.sideB : sideC
    }
    
    func getArea() -> Double {
        if(hasFourVertices) {
            return sideA * sideB
        } else {
            let semiperimeter = (sideA + sideB + sideC) / 2.0
            return sqrt(semiperimeter * (semiperimeter - sideA) * (semiperimeter - sideB) * (semiperimeter - sideC))
        }
    }
}

print(Polygon.init(hasFourVertices: true, sideA: 4).getArea())
print(Polygon.init(hasFourVertices: true, sideA: 7, sideB: 4).getArea())
print(Polygon.init(hasFourVertices: false, sideA: 3, sideB: 4, sideC: 5).getArea())
print(Polygon.init(hasFourVertices: false, sideA: 3, sideB: 4).getArea())   // isosceles
print(Polygon.init(hasFourVertices: false, sideA: 3).getArea())             // equilateral
