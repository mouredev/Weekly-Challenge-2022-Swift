
"""
/*
 * Reto #1
 * ¬øES UN ANAGRAMA?
 * Fecha publicaci√≥n enunciado: 03/01/22
 * Fecha publicaci√≥n resoluci√≥n: 10/01/22
 * Dificultad: MEDIA
 *
 * Enunciado: Escribe una funci√≥n que reciba dos palabras (String) y retorne verdadero o falso (Bool) seg√∫n sean o no anagramas.
 * Un Anagrama consiste en formar una palabra reordenando TODAS las letras de otra palabra inicial.
 * NO hace falta comprobar que ambas palabras existan.
 * Dos palabras exactamente iguales no son anagrama.
 *
 * Informaci√≥n adicional:
 * - Usa el canal de nuestro discord (https://mouredev.com/discord) "üîÅreto-semanal" para preguntas, dudas o prestar ayuda la acomunidad.
 * - Puedes hacer un Fork del repo y una Pull Request al repo original para que veamos tu soluci√≥n aportada.
 * - Revisar√© el ejercicio en directo desde Twitch el lunes siguiente al de su publicaci√≥n.
 * - Subir√© una posible soluci√≥n al ejercicio el lunes siguiente al de su publicaci√≥n.
 *
 */
"""

def anagrama(p1,p2):
    
    p1 = p1.lower().replace("√°", "a").replace("√†", "a").replace("√©", "e").replace("√®", "e").replace("√≠", "i").replace("√¨", "i").replace("√≥", "o").replace("√≤", "o").replace("√∫", "u").replace("√π", "u")
    p2 = p2.lower().replace("√°", "a").replace("√†", "a").replace("√©", "e").replace("√®", "e").replace("√≠", "i").replace("√¨", "i").replace("√≥", "o").replace("√≤", "o").replace("√∫", "u").replace("√π", "u")
    
    aux1 = []
    aux2 = []
    
    for i in p1:
        aux1.append(i)
        
    for i in p2:
        aux2.append(i)
    
    aux1.sort(),aux2.sort()
    
    if aux1 == aux2:
        return True
    else:
        return False


p1 = input("Primera palabra: ")
p2 = input("Segunda palabra: ")

print(anagrama(p1,p2))